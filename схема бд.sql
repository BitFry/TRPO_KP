ALTER TABLE WARROWNUMBER 
DROP CONSTRAINT WARROWNUMBER_DOCROW_FK;

ALTER TABLE WARRANT 
DROP CONSTRAINT WARRANT_EMPLOYEE_FK1;

ALTER TABLE WARRANT 
DROP CONSTRAINT WARRANT_PAYMENTORDER_FK;

ALTER TABLE PRODUCT 
DROP CONSTRAINT PRODUCT_AGENCY_FK;

ALTER TABLE PAYMENTORDER 
DROP CONSTRAINT PAYMENTORDER_AGENCY_FK;

ALTER TABLE PAYMENTORDER 
DROP CONSTRAINT PAYMENTORDER_BILL_FK1;

ALTER TABLE EMPLOYEE 
DROP CONSTRAINT EMPLOYEE_DEPARTMENT_FK;

ALTER TABLE DOCROW 
DROP CONSTRAINT DOCROW_BILL_FK;

ALTER TABLE DOCROW 
DROP CONSTRAINT DOCROW_PAYMENTORDER_FK;

ALTER TABLE DOCROW 
DROP CONSTRAINT DOCROW_PRODUCT_FK;

ALTER TABLE DOCROW 
DROP CONSTRAINT DOCROW_WARRANT_FK;

ALTER TABLE DEPARTMENT 
DROP CONSTRAINT DEPARTMENT_AGENCY_FK;

ALTER TABLE BILLROWNUMBER 
DROP CONSTRAINT BILLROWNUMBER_DOCROW_FK;

ALTER TABLE BILL 
DROP CONSTRAINT BILL_AGENCY_FK;

ALTER TABLE BILL 
DROP CONSTRAINT BILL_AGENCY_FK1;

DROP TABLE WARROWNUMBER;

DROP TABLE WARRANT;

DROP TABLE PRODUCT;

DROP TABLE PAYMENTORDER;

DROP TABLE EMPLOYEE;

DROP TABLE DOCROW;

DROP TABLE DEPARTMENT;

DROP TABLE BILLROWNUMBER;

DROP TABLE BILL;

DROP TABLE AGENCY;

DROP SEQUENCE WARROWNUMBER_SEQ;

DROP SEQUENCE WARRANT_SEQ;

DROP SEQUENCE PRODUCT_SEQ;

DROP SEQUENCE PAYMENTORDER_SEQ;

DROP SEQUENCE EMPLOYEE_SEQ;

DROP SEQUENCE DOCROW_SEQ1;

DROP SEQUENCE DEPARTMENT_SEQ;

DROP SEQUENCE BILLROWNUMBER_SEQ;

DROP SEQUENCE BILL_SEQ;

DROP SEQUENCE AGENCY_SEQ;

CREATE TABLE WARROWNUMBER 
(
  ID NUMBER NOT NULL 
, ROW_ID NUMBER NOT NULL 
, ROWNUMBER NUMBER 
, CONSTRAINT WARROWNUMBER_PK PRIMARY KEY 
  (
    ID 
  )
  ENABLE 
);

CREATE TABLE WARRANT 
(
  ID NUMBER NOT NULL 
, EMPL_ID NUMBER NOT NULL 
, ORDER_ID NUMBER NOT NULL 
, ISSUE_DATE DATE NOT NULL 
, VALID_UNTIL DATE 
, CONSTRAINT WARRANT_PK PRIMARY KEY 
  (
    ID 
  )
  ENABLE 
);

CREATE TABLE PRODUCT 
(
  ID NUMBER NOT NULL 
, SUP_ID NUMBER NOT NULL 
, NAME VARCHAR2(256) NOT NULL 
, UINT VARCHAR2(40) NOT NULL 
, PRICE REAL NOT NULL 
, NDS REAL NOT NULL 
, EXCISE REAL NOT NULL 
, CONSTRAINT PRODUCT_PK PRIMARY KEY 
  (
    ID 
  )
  ENABLE 
);

CREATE TABLE PAYMENTORDER 
(
  ID NUMBER NOT NULL 
, BILL_ID NUMBER 
, ORG_ID NUMBER NOT NULL 
, PODATE DATE NOT NULL 
, AMOUNT REAL NOT NULL 
, CONSTRAINT PAYMENTORDER_PK PRIMARY KEY 
  (
    ID 
  )
  ENABLE 
);

CREATE TABLE EMPLOYEE 
(
  ID NUMBER NOT NULL 
, DEP_ID NUMBER NOT NULL 
, NAME VARCHAR2(40) NOT NULL 
, POST VARCHAR2(40) NOT NULL 
, SERIES VARCHAR2(40) NOT NULL 
, PNUMBER VARCHAR2(40) NOT NULL 
, ISSUE_DATE DATE NOT NULL 
, ISSUED_BY VARCHAR2(256) NOT NULL 
, CONSTRAINT EMPLOYEE_PK PRIMARY KEY 
  (
    ID 
  )
  ENABLE 
);

CREATE TABLE DOCROW 
(
  ID NUMBER NOT NULL 
, PRODUCT_ID NUMBER NOT NULL 
, BILL_ID NUMBER NOT NULL 
, WAR_ID NUMBER 
, PO_ID NUMBER 
, COUNT NUMBER NOT NULL 
, STATUS NUMBER DEFAULT 0 NOT NULL 
, CONSTRAINT DOCROW_PK PRIMARY KEY 
  (
    ID 
  )
  ENABLE 
);

CREATE TABLE DEPARTMENT 
(
  ID NUMBER NOT NULL 
, ORG_ID NUMBER NOT NULL 
, NAME VARCHAR2(40) NOT NULL 
, CONSTRAINT DEPARTMENT_PK PRIMARY KEY 
  (
    ID 
  )
  ENABLE 
);

CREATE TABLE BILLROWNUMBER 
(
  ID NUMBER NOT NULL 
, ROW_ID NUMBER NOT NULL 
, ROWNUMBER NUMBER 
, CONSTRAINT TABLE1_PK1 PRIMARY KEY 
  (
    ID 
  )
  ENABLE 
);

CREATE TABLE BILL 
(
  ID NUMBER NOT NULL 
, SUP_ID NUMBER NOT NULL 
, CLIENT_ID NUMBER NOT NULL 
, ISSUE_DATE DATE NOT NULL 
, CONSTRAINT BILL_PK PRIMARY KEY 
  (
    ID 
  )
  ENABLE 
);

CREATE TABLE AGENCY 
(
  ID NUMBER NOT NULL 
, NAME VARCHAR2(40) NOT NULL 
, INN VARCHAR2(40) NOT NULL 
, KPP VARCHAR2(40) NOT NULL 
, ADRESS VARCHAR2(70) NOT NULL 
, RS VARCHAR2(40) NOT NULL 
, KS VARCHAR2(40) NOT NULL 
, BANK VARCHAR2(40) NOT NULL 
, BIK VARCHAR2(40) NOT NULL 
, PHONE VARCHAR2(15) NOT NULL 
, EMAIL VARCHAR2(40) NOT NULL 
, WEBSITE VARCHAR2(40) 
, DIRECTOR VARCHAR2(40) NOT NULL 
, CHIEF_ACCOUNTANT VARCHAR2(40) NOT NULL 
, CONSTRAINT SUPPLIER_PK PRIMARY KEY 
  (
    ID 
  )
  ENABLE 
);

ALTER TABLE WARROWNUMBER
ADD CONSTRAINT WARROWNUMBER_UK1 UNIQUE 
(
  ROW_ID 
)
ENABLE;

ALTER TABLE WARROWNUMBER
ADD CONSTRAINT WARROWNUMBER_UK2 UNIQUE 
(
  ROW_ID 
, ROWNUMBER 
)
ENABLE;

ALTER TABLE WARRANT
ADD CONSTRAINT WARRANT_UK1 UNIQUE 
(
  ORDER_ID 
)
ENABLE;

ALTER TABLE PRODUCT
ADD CONSTRAINT PRODUCT_UK1 UNIQUE 
(
  NAME 
, SUP_ID 
)
ENABLE;

ALTER TABLE EMPLOYEE
ADD CONSTRAINT EMPLOYEE_UK1 UNIQUE 
(
  NAME 
, DEP_ID 
)
ENABLE;

ALTER TABLE EMPLOYEE
ADD CONSTRAINT EMPLOYEE_UK2 UNIQUE 
(
  SERIES 
, PNUMBER 
)
ENABLE;

ALTER TABLE DOCROW
ADD CONSTRAINT DOCROW_UK1 UNIQUE 
(
  PRODUCT_ID 
, BILL_ID 
)
ENABLE;

ALTER TABLE DEPARTMENT
ADD CONSTRAINT DEPARTMENT_UK1 UNIQUE 
(
  NAME 
, ORG_ID 
)
ENABLE;

ALTER TABLE BILLROWNUMBER
ADD CONSTRAINT BILLROWNUMBER_UK1 UNIQUE 
(
  ROW_ID 
)
ENABLE;

ALTER TABLE BILLROWNUMBER
ADD CONSTRAINT BILLROWNUMBER_UK2 UNIQUE 
(
  ROW_ID 
, ROWNUMBER 
)
ENABLE;

ALTER TABLE AGENCY
ADD CONSTRAINT SUPPLIER_UK1 UNIQUE 
(
  NAME 
)
ENABLE;

ALTER TABLE AGENCY
ADD CONSTRAINT SUPPLIER_UK2 UNIQUE 
(
  INN 
, KPP 
)
ENABLE;

ALTER TABLE AGENCY
ADD CONSTRAINT SUPPLIER_UK3 UNIQUE 
(
  PHONE 
)
ENABLE;

ALTER TABLE AGENCY
ADD CONSTRAINT SUPPLIER_UK4 UNIQUE 
(
  EMAIL 
)
ENABLE;

ALTER TABLE AGENCY
ADD CONSTRAINT SUPPLIER_UK5 UNIQUE 
(
  WEBSITE 
)
ENABLE;

ALTER TABLE WARROWNUMBER
ADD CONSTRAINT WARROWNUMBER_DOCROW_FK FOREIGN KEY
(
  ROW_ID 
)
REFERENCES DOCROW
(
  ID 
)
ON DELETE CASCADE ENABLE;

ALTER TABLE WARRANT
ADD CONSTRAINT WARRANT_EMPLOYEE_FK1 FOREIGN KEY
(
  EMPL_ID 
)
REFERENCES EMPLOYEE
(
  ID 
)
ON DELETE CASCADE ENABLE;

ALTER TABLE WARRANT
ADD CONSTRAINT WARRANT_PAYMENTORDER_FK FOREIGN KEY
(
  ORDER_ID 
)
REFERENCES PAYMENTORDER
(
  ID 
)
ON DELETE CASCADE ENABLE;

ALTER TABLE PRODUCT
ADD CONSTRAINT PRODUCT_AGENCY_FK FOREIGN KEY
(
  SUP_ID 
)
REFERENCES AGENCY
(
  ID 
)
ON DELETE CASCADE ENABLE;

ALTER TABLE PAYMENTORDER
ADD CONSTRAINT PAYMENTORDER_AGENCY_FK FOREIGN KEY
(
  ORG_ID 
)
REFERENCES AGENCY
(
  ID 
)
ENABLE;

ALTER TABLE PAYMENTORDER
ADD CONSTRAINT PAYMENTORDER_BILL_FK1 FOREIGN KEY
(
  BILL_ID 
)
REFERENCES BILL
(
  ID 
)
ON DELETE CASCADE ENABLE;

ALTER TABLE EMPLOYEE
ADD CONSTRAINT EMPLOYEE_DEPARTMENT_FK FOREIGN KEY
(
  DEP_ID 
)
REFERENCES DEPARTMENT
(
  ID 
)
ON DELETE CASCADE ENABLE;

ALTER TABLE DOCROW
ADD CONSTRAINT DOCROW_BILL_FK FOREIGN KEY
(
  BILL_ID 
)
REFERENCES BILL
(
  ID 
)
ENABLE;

ALTER TABLE DOCROW
ADD CONSTRAINT DOCROW_PAYMENTORDER_FK FOREIGN KEY
(
  PO_ID 
)
REFERENCES PAYMENTORDER
(
  ID 
)
ENABLE;

ALTER TABLE DOCROW
ADD CONSTRAINT DOCROW_PRODUCT_FK FOREIGN KEY
(
  PRODUCT_ID 
)
REFERENCES PRODUCT
(
  ID 
)
ENABLE;

ALTER TABLE DOCROW
ADD CONSTRAINT DOCROW_WARRANT_FK FOREIGN KEY
(
  WAR_ID 
)
REFERENCES WARRANT
(
  ID 
)
ON DELETE SET NULL ENABLE;

ALTER TABLE DEPARTMENT
ADD CONSTRAINT DEPARTMENT_AGENCY_FK FOREIGN KEY
(
  ORG_ID 
)
REFERENCES AGENCY
(
  ID 
)
ON DELETE CASCADE ENABLE;

ALTER TABLE BILLROWNUMBER
ADD CONSTRAINT BILLROWNUMBER_DOCROW_FK FOREIGN KEY
(
  ROW_ID 
)
REFERENCES DOCROW
(
  ID 
)
ON DELETE CASCADE ENABLE;

ALTER TABLE BILL
ADD CONSTRAINT BILL_AGENCY_FK FOREIGN KEY
(
  SUP_ID 
)
REFERENCES AGENCY
(
  ID 
)
ON DELETE SET NULL ENABLE;

ALTER TABLE BILL
ADD CONSTRAINT BILL_AGENCY_FK1 FOREIGN KEY
(
  CLIENT_ID 
)
REFERENCES AGENCY
(
  ID 
)
ON DELETE SET NULL ENABLE;

CREATE OR REPLACE VIEW WARROW AS SELECT 
    WARROWNUMBER.ID ID1, 
    WARROWNUMBER.ROW_ID ROW_ID, 
    WARROWNUMBER.ROWNUMBER ROWNUMBER, 
    DOCROW.ID ID, 
    DOCROW.PRODUCT_ID PRODUCT_ID, 
    DOCROW.BILL_ID BILL_ID, 
    DOCROW.WAR_ID WAR_ID, 
    DOCROW.PO_ID PO_ID, 
    DOCROW.COUNT COUNT, 
    DOCROW.STATUS STATUS 
FROM 
    WARROWNUMBER, 
    DOCROW 
WHERE 
    WARROWNUMBER.ROW_ID = DOCROW.ID;

CREATE OR REPLACE VIEW BILLROW AS SELECT 
    BILLROWNUMBER.ID ID1, 
    BILLROWNUMBER.ROW_ID ROW_ID, 
    BILLROWNUMBER.ROWNUMBER ROWNUMBER, 
    DOCROW.ID ID, 
    DOCROW.PRODUCT_ID PRODUCT_ID, 
    DOCROW.BILL_ID BILL_ID, 
    DOCROW.WAR_ID WAR_ID, 
    DOCROW.PO_ID PO_ID, 
    DOCROW.COUNT COUNT, 
    DOCROW.STATUS STATUS 
FROM 
    BILLROWNUMBER, 
    DOCROW 
WHERE 
    BILLROWNUMBER.ROW_ID = DOCROW.ID;

CREATE SEQUENCE WARROWNUMBER_SEQ INCREMENT BY 1 START WITH 1000 CACHE 20;

CREATE SEQUENCE WARRANT_SEQ INCREMENT BY 1 START WITH 1000 CACHE 20;

CREATE SEQUENCE PRODUCT_SEQ INCREMENT BY 1 START WITH 1000 CACHE 20;

CREATE SEQUENCE PAYMENTORDER_SEQ INCREMENT BY 1 START WITH 1000 CACHE 20;

CREATE SEQUENCE EMPLOYEE_SEQ INCREMENT BY 1 START WITH 1000 CACHE 20;

CREATE SEQUENCE DOCROW_SEQ1 INCREMENT BY 1 START WITH 1000 CACHE 20;

CREATE SEQUENCE DEPARTMENT_SEQ INCREMENT BY 1 START WITH 1000 CACHE 20;

CREATE SEQUENCE BILLROWNUMBER_SEQ;

CREATE SEQUENCE BILL_SEQ INCREMENT BY 1 START WITH 1000 CACHE 20;

CREATE SEQUENCE AGENCY_SEQ INCREMENT BY 1 START WITH 1000 CACHE 20;

CREATE OR REPLACE TRIGGER WARROWNUMBER_TRG BEFORE INSERT ON WARROWNUMBER 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.ID IS NULL THEN
      SELECT WARROWNUMBER_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/

CREATE OR REPLACE TRIGGER WARRANT_TRG BEFORE INSERT ON WARRANT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.ID IS NULL THEN
      SELECT WARRANT_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/

CREATE OR REPLACE TRIGGER PRODUCT_TRG BEFORE INSERT ON PRODUCT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.ID IS NULL THEN
      SELECT PRODUCT_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/

CREATE OR REPLACE TRIGGER PAYMENTORDER_TRG BEFORE INSERT ON PAYMENTORDER 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.ID IS NULL THEN
      SELECT PAYMENTORDER_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/

CREATE OR REPLACE TRIGGER ONWARRANTINSERT_TRG BEFORE INSERT ON WARRANT 
FOR EACH ROW 
BEGIN
  SELECT :NEW.ISSUE_DATE + 10 INTO :NEW.VALID_UNTIL FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER EMPLOYEE_TRG BEFORE INSERT ON EMPLOYEE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.ID IS NULL THEN
      SELECT EMPLOYEE_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/

CREATE OR REPLACE TRIGGER DOCROW_TRG BEFORE INSERT ON DOCROW 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.ID IS NULL THEN
      SELECT DOCROW_SEQ1.NEXTVAL INTO :NEW.ID FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/

CREATE OR REPLACE TRIGGER DEPARTMENT_TRG BEFORE INSERT ON DEPARTMENT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.ID IS NULL THEN
      SELECT DEPARTMENT_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/

CREATE OR REPLACE TRIGGER BILLROWNUMBER_TRG BEFORE INSERT ON BILLROWNUMBER 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.ID IS NULL THEN
      SELECT BILLROWNUMBER_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/

CREATE OR REPLACE TRIGGER BILL_TRG BEFORE INSERT ON BILL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.ID IS NULL THEN
      SELECT BILL_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/

CREATE OR REPLACE TRIGGER AGENCY_TRG BEFORE INSERT ON AGENCY 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.ID IS NULL THEN
      SELECT AGENCY_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
